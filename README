Shoebot
=======

Ricardo Lafuente, 2008


Description
-----------

Shoebot is a pure Python graphics robot: It takes a Python script as input, which describes a drawing process, and outputs a graphic in a common open standard format (SVG, PDF, PostScript, or PNG). It has a simple text editor GUI, and scripts can describe their own GUIs for controlling variables interactively. Being pure Python, it can also be used as a Python module, a plugin for Python-scriptable tools such as Inkscape, and run from the command line. It was directly inspired by DrawBot and Shoes. Thus, "Shoebot." 

Installing Shoebot
------------------

First thing is to install the appropriate dependencies. If this is your first time using Shoebot, you'll want to install all of them:

Debian/Ubuntu:

  sudo apt-get install python-cairo python-gtk2 \
  python-gobject python-pygments

Fedora:

  yum install pycairo pycairo-devel pygtk2 pygtk2-devel \
  pygobject2 pygobject2 pygobject2-devel

For now, the only means of installing Shoebot is getting it from the source repository. Shoebot uses Mercurial for version control. It's available on most major GNU/Linux distributions; fire up your terminal and type:

Ubuntu/Debian:

  sudo apt-get install mercurial

Fedora:

  yum install mercurial

Gentoo:

  emerge mercurial

Make a temporary directory to download all source files into, and then get the source itself.

  mkdir ~/src
  cd ~/src
  hg clone https://code.goto10.org/hg/shoebot

You should now see a new shoebot/ directory. The only remaining step is to install it proper:

  cd shoebot
  sudo python setup.py install


Running the Shoebot IDE
-----------------------

For your first taste of Shoebot, try running the Shoebot IDE by typing the
following in your terminal:

  shoebot-ide

From there, open the primitives.bot example (in the examples/ dir under
the dir where you downloaded the sources, or in /usr/share/shoebot/examples).
After it's open, run it (Run->Run script).
You can now try tweaking the script values and running it again to see how
each command behaves.

Note: The Shoebot IDE is still in a testing phase and some things might break; 
please report all bugs or inconsistencies you find at the Shoebot bugtracker.


Running Shoebot from the console
--------------------------------

Using the Shoebot console runner is straightforward:

  sbot inputfile.bot

This command will run the 'inputfile.bot' script, and create an output image
file (output.png). You'll want to specify your own filename, which can be
done like so:

  sbot inputfile.bot -o image.svg

The allowed extensions for the output filename are .svg, .ps, .pdf and .png.

You can find some example Shoebot scripts in /usr/share/shoebot/examples.

Shoebot can also run in a window, which is useful for quick previews, as well
as realtime manipulation of parameters. For this, just use the window flag:

  sbot -w inputfile.bot

For a list of extra options, type

  sbot -h


Further reading
---------------

For a great intro to the Nodebox/Shoebot language, be sure to check the Nodebox tutorials at http://nodebox.net/code/index.php/Tutorial .

The Shoebot website has quite a lot more information on what you can do with Shoebot, such as:

  * running Shoebot as a Python module
  * using the socketserver to have other programs control a Shoebot script
  * using Shoebot to generate images via a CGI script


Running Shoebot as a Python module
----------------------------------

Shoebot can also be loaded as a module. For now, scripts taking advantage of
this must be placed inside the shoebot dir.

After including an import statement,

  import shoebot

a Box object needs to be created, and all further drawing commands can be 
called on that instance.

The Box instance should be created with the output file name as an argument. 

  box = shoebot.Box("output.svg")
  box.rect(10,10,100,100)

When you're finished with drawing, just call

  box.finish()

and your output file should be created.

Also, when using bitmap files, you can save snapshots of the current state
of the Box instance like so:

  box.snapshot("snap.png")

Note that this doesn't work if your Box object was created with a vector
format output.

You can even call external Shoebot/Nodebox scripts from your Python script:

  box.run("example.bot")


Links
-----

Source browser:		http://code.tinkerhouse.net/shoebot/hg
Bug tracker:		http://code.tinkerhouse.net/shoebot/trac
Announcement blog:  http://identi.ca/shoebot
Mailing lists:      http://tinkerhouse.net/shoebot/devel


Contact
-------

The author can be reached at r _at_ sollec _dot_ org

    Copyright (C) 2007, 2008  Ricardo Lafuente
    Developed at the Piet Zwart Institute, Rotterdam

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as
    published by the Free Software Foundation, either version 3 of the
    License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.


